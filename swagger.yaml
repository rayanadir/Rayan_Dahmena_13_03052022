swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Authorization error
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Authorization error
        '500':
          description: Internal Server Error
  /user/accounts:
    get:
      security:
        - Bearer : []
      tags:
      - Accounts
      summary: "Accounts"
      description: "Returns a list of user accounts"
      produces:
      - "application/json"
      parameters: 
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      responses:
        "200":
          description: "Accounts retrieved successfully"
          schema:
            $ref: '#/definitions/Accounts'
        '401':
          description: Authorization error
        "500":
          description: Internal Server Error
  /user/accounts/{accountId}:        
    get:
      security:
        - Bearer : []
      tags:
      - Accounts
      summary: "Account"
      description: "Returns a user account"
      produces:
      - "application/json"
      parameters: 
      - in: path
        name: accountId
        description: Account id
        required: true
        type: string
      responses:
        "200":
          description: "Account retrieved successfully"
          schema:
            $ref: '#/definitions/Account'
        '401':
          description: Authorization error
        "404": 
          description: "Account does not exist"
        "500":
          description: "Internal Server Error"
  /user/accounts/{accountId}/transactions:
    get:
      security:
        - Bearer : []
      tags:
      - Transactions
      summary: "Transactions"
      description: "Returns a list of user transactions"
      produces:
      - "application/json"
      parameters: 
      - in: path
        name: accountId
        description: Account id
        required: true
        type: string
      responses:
        "200":
          description: "Transactions retrieved successfully"
          schema:
            $ref: '#/definitions/Transactions'
        '401':
          description: Authorization error
        "500":
          description: "Internal Server Error"
  /user/accounts/{accountId}/transactions/{transactionId}:
    get:
      security:
        - Bearer : []
      tags:
      - Transactions
      summary: "Transaction"
      description: "Returns a user transaction"
      produces:
      - "application/json"
      parameters: 
      - in: path
        name: accountId
        description: Account id
        required: true
        type: string
      - in: path
        name: transactionId
        description: Transaction id
        required: true
        type: string
      responses:
        "200":
          description: "Transaction retrieved successfully"
          schema:
            $ref: '#/definitions/Transaction'
        '401':
          description: Authorization error
        "404":
          description: "Transaction does not exist"
        "500":
          description: "Internal Server Error"      
    patch:
      security:
        - Bearer : []
      tags:
      - Transactions
      summary: "Transaction"
      description: "Update a category transaction"
      parameters: 
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update category transaction name
          required: true
          schema:
            $ref: '#/definitions/Edit'
        - in: path
          name: accountId
          description: Account id
          required: true
          type: string
        - in: path
          name: transactionId
          description: Transaction id
          required: true
          type: string
      produces:
        - application/json
      responses: 
        "200":
          description: "Category transaction updated successfully"
          schema:
            $ref: "#/definitions/Edit"
        "400":
          description: Invalid fields
        '401':
          description: Authorization error          
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Account:
    type: object
    properties:
      accountId: 
        type: integer
        format: int64
      name:
        type: string
      amount:
        type: integer
        format: int64
  Accounts: 
    type: array
    items: 
      $ref: "#/definitions/Account"
  Edit:
    type: object
    properties:
      category:
        type: string
      note:
        type: string
  Transaction:
    type: object
    properties:
      date:
        type: string
      description:
        type: string
      amount: 
        type: integer
        format: int64
      balance:
        type: integer
        format: int64
      category:
        type: string
      note: 
        type: string
  Transactions: 
    type: array
    items: 
      $ref: "#/definitions/Transaction"